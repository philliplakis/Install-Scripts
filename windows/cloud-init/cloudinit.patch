--- /usr/share/perl5/PVE/QemuServer/Cloudinit.pm	2019-01-07 16:25:34.700319393 +0800
+++ /root/Cloudinit.pm.new	2019-01-07 16:36:04.105658799 +0800
@@ -37,7 +37,7 @@
     my $size = PVE::Storage::file_size_info($iso_path);
 
     eval {
-	run_command([['genisoimage', '-R', '-V', $label, $path],
+	run_command([['genisoimage','-iso-level', '3', '-R', '-V', $label, $path],
 		     ['qemu-img', 'dd', '-n', '-f', 'raw', '-O', $format,
 		      'isize=0', "osize=$size", "of=$iso_path"]]);
     };
@@ -137,6 +137,33 @@
     return $content;
 }
 
+
+
+
+sub configdrivewin_userdata {
+    my ($conf, $vmid) = @_;
+
+    my ($hostname, $fqdn) = get_hostname_fqdn($conf, $vmid);
+
+    my $content;
+
+     if( defined($fqdn) ){
+        $content .= "\"hostname\": \"$fqdn\"";
+     }else{
+        $content .= "\"hostname\": \"$hostname\"";
+    }
+
+    my $password = $conf->{cipassword};
+
+    if(  defined($password) &&  $password ne "" ) {
+        $content .= ",";
+        $content .= "\"admin_pass\": \"$password\"" ;
+    }
+
+    return $content;
+}
+
+
 sub split_ip4 {
     my ($ip) = @_;
     my ($addr, $mask) = split('/', $ip);
@@ -195,6 +222,58 @@
     return $content;
 }
 
+sub configdrivewin_network {
+    my ($conf) = @_;
+
+    my $content = "";
+
+    my ($searchdomains, $nameservers) = get_dns_conf($conf);
+    if ($nameservers && @$nameservers) {
+        $nameservers = join(' ', @$nameservers);
+    }
+    if ($searchdomains && @$searchdomains) {
+        $searchdomains = join(' ', @$searchdomains);
+    }
+
+    my @ifaces = grep(/^net(\d+)$/, keys %$conf);
+    foreach my $iface (@ifaces) {
+        (my $id = $iface) =~ s/^net//;
+        next if !$conf->{"ipconfig$id"};
+        my $net = PVE::QemuServer::parse_ipconfig($conf->{"ipconfig$id"});
+        $id = "eth$id";
+
+        $content .="auto $id\n";
+        if ($net->{ip}) {
+            if ($net->{ip} eq 'dhcp') {
+                $content .= "iface $id inet dhcp\n";
+            } else {
+                my ($addr, $mask) = split_ip4($net->{ip});
+                $content .= "iface $id inet static\n";
+                $content .= "        address $addr\n";
+                $content .= "        netmask $mask\n";
+                $content .= "        gateway $net->{gw}\n" if $net->{gw};
+                $content .= "        dns-nameservers $nameservers\n";
+            }
+        }
+        if ($net->{ip6}) {
+            if ($net->{ip6} =~ /^(auto|dhcp)$/) {
+                $content .= "iface $id inet6 $1\n";
+            } else {
+                my ($addr, $mask) = split('/', $net->{ip6});
+                $content .= "iface $id inet6 static\n";
+                $content .= "        address $addr\n";
+                $content .= "        netmask $mask\n";
+                $content .= "        gateway $net->{gw6}\n" if $net->{gw6};
+            }
+        }
+    }
+
+    return $content;
+}
+
+
+
+
 sub configdrive2_metadata {
     my ($uuid) = @_;
     return <<"EOF";
@@ -205,25 +284,67 @@
 EOF
 }
 
+
+
+sub configdrivewin_metadata {
+    my ( $uuid, $user_data) = @_;
+
+
+    return <<"EOF";
+{
+     "uuid": "$uuid",
+     "network_config": { "content_path": "/content/0000" },
+    $user_data
+}
+EOF
+}
+
+
+
 sub generate_configdrive2 {
     my ($conf, $vmid, $drive, $volname, $storeid) = @_;
 
-    my $user_data = cloudinit_userdata($conf, $vmid);
-    my $network_data = configdrive2_network($conf);
+    my $ostype = $conf->{ostype};
+    my $files;
+		
+    if(defined( $ostype) && PVE::QemuServer::windows_version($ostype)){
+
+       my $network_data = configdrivewin_network($conf);
+       my $user_data =  configdrivewin_userdata($conf, $vmid);
+
+      my $digest_data = $user_data . $network_data;
+      my $uuid_str = Digest::SHA::sha1_hex($digest_data);
+
+      my $meta_data = configdrivewin_metadata( $uuid_str , $user_data);
+
+       $files = {
+          '/openstack/content/0000' => $network_data,
+          '/openstack/latest/meta_data.json' => $meta_data
+      };
+
 
-    my $digest_data = $user_data . $network_data;
-    my $uuid_str = Digest::SHA::sha1_hex($digest_data);
+    } else {
 
-    my $meta_data = configdrive2_metadata($uuid_str);
+      my $user_data = cloudinit_userdata($conf, $vmid);
+      my $network_data = configdrive2_network($conf);
 
-    my $files = {
-	'/openstack/latest/user_data' => $user_data,
-	'/openstack/content/0000' => $network_data,
-	'/openstack/latest/meta_data.json' => $meta_data
-    };
+      my $digest_data = $user_data . $network_data;
+      my $uuid_str = Digest::SHA::sha1_hex($digest_data);
+
+      my $meta_data = configdrive2_metadata($uuid_str);
+
+       $files = {
+	  '/openstack/latest/user_data' => $user_data,
+	  '/openstack/content/0000' => $network_data,
+	  '/openstack/latest/meta_data.json' => $meta_data
+         };
+
+    }
+    
     commit_cloudinit_disk($conf, $vmid, $drive, $volname, $storeid, $files, 'config-2');
 }
 
+
 sub nocloud_network_v2 {
     my ($conf) = @_;
 
